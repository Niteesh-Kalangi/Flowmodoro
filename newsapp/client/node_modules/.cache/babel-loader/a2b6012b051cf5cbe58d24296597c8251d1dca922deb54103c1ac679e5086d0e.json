{"ast":null,"code":"/*import React from 'react';\n\nfunction MongoDb(){\n    const { MongoClient, ServerApiVersion } = require('mongodb');\n    const pass = \"W4B2zcEPAIyahqEL\";\n    const uri = \"mongodb+srv://niteesh8175:W4B2zcEPAIyahqEL@cluster0.pgnevai.mongodb.net/?retryWrites=true&w=majority\";\n    // Create a MongoClient with a MongoClientOptions object to set the Stable API version\n    const client = new MongoClient(uri, {\n    serverApi: {\n        version: ServerApiVersion.v1,\n        strict: true,\n        deprecationErrors: true,\n    }\n    });\n    async function run() {\n    try {\n        // Connect the client to the server\t(optional starting in v4.7)\n        await client.connect();\n        // Send a ping to confirm a successful connection\n        await client.db(\"admin\").command({ ping: 1 });\n        console.log(\"Pinged your deployment. You successfully connected to MongoDB!\");\n        databasesList = await client.db().admin().listDatabases();\n \n        console.log(\"Databases:\");\n        databasesList.databases.forEach(db => console.log(` - ${db.name}`));\n\n        const genCol = await client.db(\"mediastack_news_articles\").collection(collection_name).find().toArray();\n        return genCol;\n    } finally {\n        // Ensures that the client will close when you finish/error\n        await client.close();\n    }\n    }\n    run().catch(console.dir);\n  }\n\n  export default MongoDb;*/","map":{"version":3,"names":[],"sources":["/Users/niteesh/repos/flowmodoro/newsapp/client/src/server.js"],"sourcesContent":["/*import React from 'react';\n\nfunction MongoDb(){\n    const { MongoClient, ServerApiVersion } = require('mongodb');\n    const pass = \"W4B2zcEPAIyahqEL\";\n    const uri = \"mongodb+srv://niteesh8175:W4B2zcEPAIyahqEL@cluster0.pgnevai.mongodb.net/?retryWrites=true&w=majority\";\n    // Create a MongoClient with a MongoClientOptions object to set the Stable API version\n    const client = new MongoClient(uri, {\n    serverApi: {\n        version: ServerApiVersion.v1,\n        strict: true,\n        deprecationErrors: true,\n    }\n    });\n    async function run() {\n    try {\n        // Connect the client to the server\t(optional starting in v4.7)\n        await client.connect();\n        // Send a ping to confirm a successful connection\n        await client.db(\"admin\").command({ ping: 1 });\n        console.log(\"Pinged your deployment. You successfully connected to MongoDB!\");\n        databasesList = await client.db().admin().listDatabases();\n \n        console.log(\"Databases:\");\n        databasesList.databases.forEach(db => console.log(` - ${db.name}`));\n\n        const genCol = await client.db(\"mediastack_news_articles\").collection(collection_name).find().toArray();\n        return genCol;\n    } finally {\n        // Ensures that the client will close when you finish/error\n        await client.close();\n    }\n    }\n    run().catch(console.dir);\n  }\n\n  export default MongoDb;*/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}