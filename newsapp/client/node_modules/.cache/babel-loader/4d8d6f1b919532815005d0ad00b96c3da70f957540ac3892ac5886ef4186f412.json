{"ast":null,"code":"import React from 'react';\nfunction MongoDb() {\n  const {\n    MongoClient,\n    ServerApiVersion\n  } = require('mongodb');\n  const pass = \"W4B2zcEPAIyahqEL\";\n  const uri = \"mongodb+srv://niteesh8175:W4B2zcEPAIyahqEL@cluster0.pgnevai.mongodb.net/?retryWrites=true&w=majority\";\n  // Create a MongoClient with a MongoClientOptions object to set the Stable API version\n  const client = new MongoClient(uri, {\n    serverApi: {\n      version: ServerApiVersion.v1,\n      strict: true,\n      deprecationErrors: true\n    }\n  });\n  async function run() {\n    try {\n      // Connect the client to the server\t(optional starting in v4.7)\n      await client.connect();\n      // Send a ping to confirm a successful connection\n      await client.db(\"admin\").command({\n        ping: 1\n      });\n      console.log(\"Pinged your deployment. You successfully connected to MongoDB!\");\n      databasesList = await client.db().admin().listDatabases();\n      console.log(\"Databases:\");\n      databasesList.databases.forEach(db => console.log(` - ${db.name}`));\n      const genCol = await client.db(\"mediastack_news_articles\").collection(collection_name).find().toArray();\n      return genCol;\n    } finally {\n      // Ensures that the client will close when you finish/error\n      await client.close();\n    }\n  }\n  run().catch(console.dir);\n}\n_c = MongoDb;\nexport default MongoDb;\nvar _c;\n$RefreshReg$(_c, \"MongoDb\");","map":{"version":3,"names":["React","MongoDb","MongoClient","ServerApiVersion","require","pass","uri","client","serverApi","version","v1","strict","deprecationErrors","run","connect","db","command","ping","console","log","databasesList","admin","listDatabases","databases","forEach","name","genCol","collection","collection_name","find","toArray","close","catch","dir","_c","$RefreshReg$"],"sources":["/Users/niteesh/repos/flowmodoro/newsapp/client/src/server.js"],"sourcesContent":["import React from 'react';\n\nfunction MongoDb(){\n    const { MongoClient, ServerApiVersion } = require('mongodb');\n    const pass = \"W4B2zcEPAIyahqEL\";\n    const uri = \"mongodb+srv://niteesh8175:W4B2zcEPAIyahqEL@cluster0.pgnevai.mongodb.net/?retryWrites=true&w=majority\";\n    // Create a MongoClient with a MongoClientOptions object to set the Stable API version\n    const client = new MongoClient(uri, {\n    serverApi: {\n        version: ServerApiVersion.v1,\n        strict: true,\n        deprecationErrors: true,\n    }\n    });\n    async function run() {\n    try {\n        // Connect the client to the server\t(optional starting in v4.7)\n        await client.connect();\n        // Send a ping to confirm a successful connection\n        await client.db(\"admin\").command({ ping: 1 });\n        console.log(\"Pinged your deployment. You successfully connected to MongoDB!\");\n        databasesList = await client.db().admin().listDatabases();\n \n        console.log(\"Databases:\");\n        databasesList.databases.forEach(db => console.log(` - ${db.name}`));\n\n        const genCol = await client.db(\"mediastack_news_articles\").collection(collection_name).find().toArray();\n        return genCol;\n    } finally {\n        // Ensures that the client will close when you finish/error\n        await client.close();\n    }\n    }\n    run().catch(console.dir);\n  }\n\n  export default MongoDb;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,OAAOA,CAAA,EAAE;EACd,MAAM;IAAEC,WAAW;IAAEC;EAAiB,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;EAC5D,MAAMC,IAAI,GAAG,kBAAkB;EAC/B,MAAMC,GAAG,GAAG,sGAAsG;EAClH;EACA,MAAMC,MAAM,GAAG,IAAIL,WAAW,CAACI,GAAG,EAAE;IACpCE,SAAS,EAAE;MACPC,OAAO,EAAEN,gBAAgB,CAACO,EAAE;MAC5BC,MAAM,EAAE,IAAI;MACZC,iBAAiB,EAAE;IACvB;EACA,CAAC,CAAC;EACF,eAAeC,GAAGA,CAAA,EAAG;IACrB,IAAI;MACA;MACA,MAAMN,MAAM,CAACO,OAAO,CAAC,CAAC;MACtB;MACA,MAAMP,MAAM,CAACQ,EAAE,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAC,CAAC;MAC7CC,OAAO,CAACC,GAAG,CAAC,gEAAgE,CAAC;MAC7EC,aAAa,GAAG,MAAMb,MAAM,CAACQ,EAAE,CAAC,CAAC,CAACM,KAAK,CAAC,CAAC,CAACC,aAAa,CAAC,CAAC;MAEzDJ,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzBC,aAAa,CAACG,SAAS,CAACC,OAAO,CAACT,EAAE,IAAIG,OAAO,CAACC,GAAG,CAAE,MAAKJ,EAAE,CAACU,IAAK,EAAC,CAAC,CAAC;MAEnE,MAAMC,MAAM,GAAG,MAAMnB,MAAM,CAACQ,EAAE,CAAC,0BAA0B,CAAC,CAACY,UAAU,CAACC,eAAe,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MACvG,OAAOJ,MAAM;IACjB,CAAC,SAAS;MACN;MACA,MAAMnB,MAAM,CAACwB,KAAK,CAAC,CAAC;IACxB;EACA;EACAlB,GAAG,CAAC,CAAC,CAACmB,KAAK,CAACd,OAAO,CAACe,GAAG,CAAC;AAC1B;AAACC,EAAA,GAhCMjC,OAAO;AAkCd,eAAeA,OAAO;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}