{"ast":null,"code":"var _jsxFileName = \"/Users/niteesh/repos/flowmodoro/newsapp/client/src/components/TopicForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Form, Input, Rating, Button } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TopicForm = ({\n  onNewTopic\n}) => {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"topic\",\n        value: question,\n        onChange: e => setQuestion(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: async () => {\n          const news = {\n            question\n          };\n          const response = await fetch(\"/change_topic\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(news)\n          });\n          if (response.ok) {\n            fetch(\"/change_topic\").then(res => res.json()).then(data => {\n              console.log(data.articles);\n              setData(data.articles);\n            });\n            console.log(news);\n            onNewTopic(news);\n            setQuestion(\"\");\n          }\n        },\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(TopicForm, \"EjuEa88CvKPy1NEgpqIj1pnONk4=\");\n_c = TopicForm;\nvar _c;\n$RefreshReg$(_c, \"TopicForm\");","map":{"version":3,"names":["React","useState","Form","Input","Rating","Button","jsxDEV","_jsxDEV","TopicForm","onNewTopic","_s","question","setQuestion","children","Field","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","news","response","fetch","method","headers","body","JSON","stringify","ok","then","res","json","data","console","log","articles","setData","_c","$RefreshReg$"],"sources":["/Users/niteesh/repos/flowmodoro/newsapp/client/src/components/TopicForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Input, Rating, Button } from \"semantic-ui-react\";\n\nexport const TopicForm = ({ onNewTopic }) => {\n  const [question, setQuestion] = useState(\"\");\n\n  return (\n    <Form>\n      <Form.Field>\n        <Input\n          placeholder=\"topic\"\n          value={question}\n          onChange={e => setQuestion(e.target.value)}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Button\n          onClick={async () => {\n            const news = { question };\n            const response = await fetch(\"/change_topic\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(news)\n            });\n\n            if (response.ok) {\n              fetch(\"/change_topic\").then(\n                res => res.json()\n              ).then(\n                data => {\n                  console.log(data.articles)\n                  setData(data.articles)\n          \n                }\n              )\n              console.log(news);\n              onNewTopic(news);\n              setQuestion(\"\");\n            }\n          }}\n        >\n          submit\n        </Button>\n      </Form.Field>\n    </Form>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,oBACEM,OAAA,CAACL,IAAI;IAAAW,QAAA,gBACHN,OAAA,CAACL,IAAI,CAACY,KAAK;MAAAD,QAAA,eACTN,OAAA,CAACJ,KAAK;QACJY,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAEL,QAAS;QAChBM,QAAQ,EAAEC,CAAC,IAAIN,WAAW,CAACM,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,eACbhB,OAAA,CAACL,IAAI,CAACY,KAAK;MAAAD,QAAA,eACTN,OAAA,CAACF,MAAM;QACLmB,OAAO,EAAE,MAAAA,CAAA,KAAY;UACnB,MAAMC,IAAI,GAAG;YAAEd;UAAS,CAAC;UACzB,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;YAC5CC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;UAC3B,CAAC,CAAC;UAEF,IAAIC,QAAQ,CAACO,EAAE,EAAE;YACfN,KAAK,CAAC,eAAe,CAAC,CAACO,IAAI,CACzBC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAClB,CAAC,CAACF,IAAI,CACJG,IAAI,IAAI;cACNC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,QAAQ,CAAC;cAC1BC,OAAO,CAACJ,IAAI,CAACG,QAAQ,CAAC;YAExB,CACF,CAAC;YACDF,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;YACjBhB,UAAU,CAACgB,IAAI,CAAC;YAChBb,WAAW,CAAC,EAAE,CAAC;UACjB;QACF,CAAE;QAAAC,QAAA,EACH;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEX,CAAC;AAACb,EAAA,CA7CWF,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}