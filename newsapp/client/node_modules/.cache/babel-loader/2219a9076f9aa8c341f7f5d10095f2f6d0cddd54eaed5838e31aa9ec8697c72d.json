{"ast":null,"code":"var _jsxFileName = \"/Users/niteesh/repos/flowmodoro/newsapp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NewsItem from \"./components/NewsItem\";\nimport './App.css';\n//import { TopicForm } from \"./components/TopicForm\";\nimport { NewsNav } from \"./components/NewsNav\";\n//import MongoDb from './server';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(collection_name) {\n  _s();\n  //var axios = require('axios');\n  const [data, setData] = useState([]);\n  //const[question, setQuestion] = useState([])\n\n  /*useEffect(() => {\n      fetch(\"/sentiment\").then(\n        res => res.json()\n      ).then(\n        data => {\n          console.log(data.articles)\n          setData(data.articles)\n  \n        }\n      )\n    \n    \n   }, [])*/\n\n  useEffect(() => {\n    fetch(\"http://localhost:5050/\").then(data => {\n      console.log(data);\n      setData(data);\n    });\n  }, []);\n\n  /*useEffect(() => {\n    \n    setData(MongoDb(\"general\"));\n  \n   }, [])*/\n\n  /*var mapped = data.map(article => <NewsItem \n    author={article.author}\n    content={article.content}\n    description={article.description}\n    publishedAt={article.publishedAt}\n    sentiment={article.sentiment}\n    source={article.source.name}\n    title={article.title}\n    url={article.url}\n    urlToImage={article.urlToImage}\n  />);*/\n\n  var mapped2 = data.map(article => /*#__PURE__*/_jsxDEV(NewsItem, {\n    author: article.author,\n    category: article.category,\n    country: article.country,\n    description: article.description,\n    image: article.image,\n    language: article.language,\n    published_at: article.published_at,\n    sentiment: article.sentiment,\n    source: article.source,\n    title: article.title,\n    url: article.url\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 37\n  }, this));\n  const topicsList = [\"general\", \"business\", \"science\", \"health\", \"entertainment\", \"sports\", \"technology\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NewsNav, {\n        topicsList: topicsList,\n        onNewTopic: news => setData(news.articles)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container container flex\",\n      children: mapped2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","NewsItem","NewsNav","jsxDEV","_jsxDEV","App","collection_name","_s","data","setData","fetch","then","console","log","mapped2","map","article","author","category","country","description","image","language","published_at","sentiment","source","title","url","fileName","_jsxFileName","lineNumber","columnNumber","topicsList","class","children","onNewTopic","news","articles","className","_c","$RefreshReg$"],"sources":["/Users/niteesh/repos/flowmodoro/newsapp/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport NewsItem from \"./components/NewsItem\"\nimport './App.css';\n//import { TopicForm } from \"./components/TopicForm\";\nimport { NewsNav } from \"./components/NewsNav\";\n//import MongoDb from './server';\n\nfunction App(collection_name){\n  \n  //var axios = require('axios');\n  const[data, setData] = useState([])\n  //const[question, setQuestion] = useState([])\n\n  \n  /*useEffect(() => {\n      fetch(\"/sentiment\").then(\n        res => res.json()\n      ).then(\n        data => {\n          console.log(data.articles)\n          setData(data.articles)\n  \n        }\n      )\n    \n    \n\n  }, [])*/\n\n\n  useEffect(() => {\n    fetch(\"http://localhost:5050/\").then(\n      data => {\n        console.log(data);\n        setData(data);\n\n      }\n    )\n  \n  \n\n  }, [])\n\n\n\n  /*useEffect(() => {\n    \n    setData(MongoDb(\"general\"));\n  \n\n  }, [])*/\n\n\n\n\n\n  /*var mapped = data.map(article => <NewsItem \n    author={article.author}\n    content={article.content}\n    description={article.description}\n    publishedAt={article.publishedAt}\n    sentiment={article.sentiment}\n    source={article.source.name}\n    title={article.title}\n    url={article.url}\n    urlToImage={article.urlToImage}\n  />);*/\n\n  var mapped2 = data.map(article => <NewsItem \n    author={article.author}\n    category={article.category}\n    country={article.country}\n    description={article.description}\n    image={article.image}\n    language={article.language}\n    published_at={article.published_at}\n    sentiment={article.sentiment}\n    source={article.source}\n    title={article.title}\n    url={article.url}\n  />);\n\n  const topicsList = [\"general\", \"business\", \"science\", \"health\", \"entertainment\", \"sports\", \"technology\"];\n\n  return (\n    <div class = \"App\">\n      <div>\n        <NewsNav topicsList = {topicsList} onNewTopic={news =>\n          setData(news.articles)\n        }/>\n      </div>\n      \n      <div className = \"cards-container container flex\">\n         {mapped2}\n      </div>\n    </div>\n      \n    )\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,WAAW;AAClB;AACA,SAASC,OAAO,QAAQ,sBAAsB;AAC9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAACC,eAAe,EAAC;EAAAC,EAAA;EAE3B;EACA,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACnC;;EAGA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAIEC,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,wBAAwB,CAAC,CAACC,IAAI,CAClCH,IAAI,IAAI;MACNI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;MACjBC,OAAO,CAACD,IAAI,CAAC;IAEf,CACF,CAAC;EAIH,CAAC,EAAE,EAAE,CAAC;;EAIN;AACF;AACA;AACA;AACA;;EAOE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,IAAIM,OAAO,GAAGN,IAAI,CAACO,GAAG,CAACC,OAAO,iBAAIZ,OAAA,CAACH,QAAQ;IACzCgB,MAAM,EAAED,OAAO,CAACC,MAAO;IACvBC,QAAQ,EAAEF,OAAO,CAACE,QAAS;IAC3BC,OAAO,EAAEH,OAAO,CAACG,OAAQ;IACzBC,WAAW,EAAEJ,OAAO,CAACI,WAAY;IACjCC,KAAK,EAAEL,OAAO,CAACK,KAAM;IACrBC,QAAQ,EAAEN,OAAO,CAACM,QAAS;IAC3BC,YAAY,EAAEP,OAAO,CAACO,YAAa;IACnCC,SAAS,EAAER,OAAO,CAACQ,SAAU;IAC7BC,MAAM,EAAET,OAAO,CAACS,MAAO;IACvBC,KAAK,EAAEV,OAAO,CAACU,KAAM;IACrBC,GAAG,EAAEX,OAAO,CAACW;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC,CAAC;EAEH,MAAMC,UAAU,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,YAAY,CAAC;EAExG,oBACE5B,OAAA;IAAK6B,KAAK,EAAG,KAAK;IAAAC,QAAA,gBAChB9B,OAAA;MAAA8B,QAAA,eACE9B,OAAA,CAACF,OAAO;QAAC8B,UAAU,EAAIA,UAAW;QAACG,UAAU,EAAEC,IAAI,IACjD3B,OAAO,CAAC2B,IAAI,CAACC,QAAQ;MACtB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAEN3B,OAAA;MAAKkC,SAAS,EAAG,gCAAgC;MAAAJ,QAAA,EAC7CpB;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV;AAACxB,EAAA,CA3FQF,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AA6FZ,eAAeA,GAAG;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}